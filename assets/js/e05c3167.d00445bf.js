"use strict";(self.webpackChunkdummy_code_documentation=self.webpackChunkdummy_code_documentation||[]).push([[7333],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>b});var r=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function t(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?t(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function c(e,a){if(null==e)return{};var n,r,i=function(e,a){if(null==e)return{};var n,r,i={},t=Object.keys(e);for(r=0;r<t.length;r++)n=t[r],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)n=t[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var a=r.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},u=function(e){var a=s(e.components);return r.createElement(l.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,i=e.mdxType,t=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||t;return n?r.createElement(b,o(o({ref:a},u),{},{components:n})):r.createElement(b,o({ref:a},u))}));function b(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var t=n.length,o=new Array(t);o[0]=m;var c={};for(var l in a)hasOwnProperty.call(a,l)&&(c[l]=a[l]);c.originalType=e,c[p]="string"==typeof e?e:i,o[1]=c;for(var s=2;s<t;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},683:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>c,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const t={sidebar_position:15},o="IniciaCon",c={unversionedId:"Cadenas/iniciaCon",id:"Cadenas/iniciaCon",title:"IniciaCon",description:"Se utiliza para verificar si una cadena de texto comienza con un valor espec\xedfico. Imagina que tienes una palabra y quieres saber si empieza con una letra o un conjunto de letras en particular.",source:"@site/docs/Cadenas/iniciaCon.md",sourceDirName:"Cadenas",slug:"/Cadenas/iniciaCon",permalink:"/docs/Cadenas/iniciaCon",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Cadenas/iniciaCon.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"Dividir",permalink:"/docs/Cadenas/dividir"},next:{title:"Subcadena",permalink:"/docs/Cadenas/subcadena"}},l={},s=[{value:"Ejemplo",id:"ejemplo",level:2},{value:"Sintaxis",id:"sintaxis",level:2}],u={toc:s},p="wrapper";function d(e){let{components:a,...n}=e;return(0,i.kt)(p,(0,r.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"iniciacon"},"IniciaCon"),(0,i.kt)("p",null,"Se utiliza para verificar si una cadena de texto comienza con un valor espec\xedfico. Imagina que tienes una palabra y quieres saber si empieza con una letra o un conjunto de letras en particular."),(0,i.kt)("h2",{id:"ejemplo"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="iniciaCon.dummy"',title:'"iniciaCon.dummy"'},'global palabra = "Hola mundo";\nvar resultado = palabra.iniciaCon("Hola");\nimprimir(resultado);\n')),(0,i.kt)("p",null,'En este ejemplo, hemos creado una variable llamada palabra que contiene la cadena "Hola mundo". Luego utilizamos el m\xe9todo iniciaCon() en la cadena palabra para verificar si comienza con la palabra "Hola". El resultado es un valor booleano, que indica si la cadena comienza con el valor especificado. En este caso, el resultado es ',"[cierto|verdadero]",', lo cual indica que la cadena palabra comienza con "Hola".'),(0,i.kt)("p",null,"Tambi\xe9n puedes utilizar el m\xe9todo iniciaCon() con un \xedndice opcional para especificar la posici\xf3n a partir de la cual se debe realizar la comprobaci\xf3n:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="iniciaCon2.dummy"',title:'"iniciaCon2.dummy"'},'global palabra = "Hola mundo";\nvar resultado = palabra.iniciaCon("mundo", 5);\nimprimir(resultado);\n')),(0,i.kt)("p",null,'En este ejemplo, utilizamos iniciaCon("mundo", 5) para comprobar si la cadena palabra comienza con "mundo" a partir de la posici\xf3n 5. El resultado es ',"[falso]",", ya que la cadena no cumple con esa condici\xf3n."),(0,i.kt)("h2",{id:"sintaxis"},"Sintaxis"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"iniciaCon(palabraBuscada)\nstartsWith(palabraBuscada, posicion)\n")))}d.isMDXComponent=!0}}]);