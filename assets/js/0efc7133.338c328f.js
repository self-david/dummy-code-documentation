"use strict";(self.webpackChunkdummy_code_documentation=self.webpackChunkdummy_code_documentation||[]).push([[2226],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=s(t),p=r,f=u["".concat(d,".").concat(p)]||u[p]||m[p]||o;return t?a.createElement(f,i(i({ref:n},l),{},{components:t})):a.createElement(f,i({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var d in n)hasOwnProperty.call(n,d)&&(c[d]=n[d]);c.originalType=e,c[u]="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3519:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:3},i="TerminaCon",c={unversionedId:"Cadenas/terminaCon",id:"Cadenas/terminaCon",title:"TerminaCon",description:"El m\xe9todo determina si una cadena termina con los caracteres de una cadena espec\xedfica, devolviendo verdadero o falso seg\xfan corresponda.",source:"@site/docs/Cadenas/terminaCon.md",sourceDirName:"Cadenas",slug:"/Cadenas/terminaCon",permalink:"/dummy-code-documentation/docs/Cadenas/terminaCon",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Cadenas/terminaCon.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Concatenar",permalink:"/dummy-code-documentation/docs/Cadenas/concatenar"},next:{title:"Incluye",permalink:"/dummy-code-documentation/docs/Cadenas/incluye"}},d={},s=[{value:"Ejemplo\ud83d\udcdd",id:"ejemplo",level:2},{value:"Sintaxis\ud83d\udd24",id:"sintaxis",level:2}],l={toc:s},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"terminacon"},"TerminaCon"),(0,r.kt)("p",null,"El m\xe9todo determina si una ",(0,r.kt)("inlineCode",{parentName:"p"},"cadena")," termina con los caracteres de una ",(0,r.kt)("inlineCode",{parentName:"p"},"cadena")," espec\xedfica, devolviendo verdadero o falso seg\xfan corresponda."),(0,r.kt)("h2",{id:"ejemplo"},"Ejemplo\ud83d\udcdd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="terminaCon.dummy"',title:'"terminaCon.dummy"'},'const cadena = "Hola, mundo!";\n\nconsola.log(cadena.terminaCon("!")); // Resultado: verdadero\nconsola.log(cadena.terminaCon("mundo")); // Resultado: falso\nconsola.log(cadena.terminaCon("mundo!")); // Resultado: verdadero\n')),(0,r.kt)("p",null,"te puedes dar cuenta de que puedes usar desde uno hasta n caracteres, pero estos deben coincidir al 100% para que regrese verdadero."),(0,r.kt)("h2",{id:"sintaxis"},"Sintaxis\ud83d\udd24"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"terminaCon(cadena de b\xfasqueda)\nterminaCon(cadena de b\xfasqueda, posici\xf3n final)\n")))}m.isMDXComponent=!0}}]);