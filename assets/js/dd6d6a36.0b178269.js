"use strict";(self.webpackChunkdummy_code_documentation=self.webpackChunkdummy_code_documentation||[]).push([[1745],{3905:(e,a,r)=>{r.d(a,{Zo:()=>u,kt:()=>f});var t=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function c(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=t.createContext({}),l=function(e){var a=t.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):o(o({},a),e)),r},u=function(e){var a=l(e.components);return t.createElement(s.Provider,{value:a},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return r?t.createElement(f,o(o({ref:a},u),{},{components:r})):t.createElement(f,o({ref:a},u))}));function f(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var c={};for(var s in a)hasOwnProperty.call(a,s)&&(c[s]=a[s]);c.originalType=e,c[d]="string"==typeof e?e:n,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8749:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var t=r(7462),n=(r(7294),r(3905));const i={sidebar_position:14},o="Cortar",c={unversionedId:"Cadenas/cortar",id:"Cadenas/cortar",title:"Cortar",description:"Se utiliza para extraer una parte espec\xedfica de una cadena de texto sin modificar la cadena original. Imagina que tienes una frase y quieres obtener una parte espec\xedfica de esa frase.",source:"@site/docs/Cadenas/cortar.md",sourceDirName:"Cadenas",slug:"/Cadenas/cortar",permalink:"/docs/Cadenas/cortar",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Cadenas/cortar.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"tutorialSidebar",previous:{title:"Buscar",permalink:"/docs/Cadenas/buscar"},next:{title:"Dividir",permalink:"/docs/Cadenas/dividir"}},s={},l=[{value:"Ejemplo",id:"ejemplo",level:2},{value:"Sintaxis",id:"sintaxis",level:2}],u={toc:l},d="wrapper";function p(e){let{components:a,...r}=e;return(0,n.kt)(d,(0,t.Z)({},u,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"cortar"},"Cortar"),(0,n.kt)("p",null,"Se utiliza para extraer una parte espec\xedfica de una cadena de texto sin modificar la cadena original. Imagina que tienes una frase y quieres obtener una parte espec\xedfica de esa frase. "),(0,n.kt)("h2",{id:"ejemplo"},"Ejemplo"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="cortar.dummy"',title:'"cortar.dummy"'},'global frase = "Hola mundo";\nvar subcadena = frase.cortar(5);\nimprimir(subcadena);\n')),(0,n.kt)("p",null,'En este ejemplo, hemos creado una variable llamada frase que contiene la cadena "Hola mundo", luego utilizamos el m\xe9todo cortar() en la cadena frase para extraer una subcadena a partir de la posici\xf3n 5. El resultado es la subcadena "mundo", que se imprime en la consola.'),(0,n.kt)("p",null,"Tambi\xe9n puedes utilizar el m\xe9todo cortar() con dos argumentos para especificar el inicio y fin de la subcadena que deseas extraer:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="cortar2.dummy"',title:'"cortar2.dummy"'},'global frase = "Hola mundo";\nvar subcadena = frase.cortar(5, 9);\nimprimir(subcadena);\n\n')),(0,n.kt)("p",null,'En este ejemplo, utilizamos cortar(5, 9) para extraer la subcadena desde la posici\xf3n 5 hasta la posici\xf3n 9 (sin incluir la posici\xf3n 9). El resultado es la subcadena "mund".'),(0,n.kt)("h2",{id:"sintaxis"},"Sintaxis"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"cortar(indiceInicio)\ncortar(indiceInicio, indiceFin)\n")),(0,n.kt)("p",null,"indiceInicio indica a partir de que posicion se va a extraer la cadena"),(0,n.kt)("p",null,"indiceFin indica hasta que posicion se va a extraer la cadena"))}p.isMDXComponent=!0}}]);