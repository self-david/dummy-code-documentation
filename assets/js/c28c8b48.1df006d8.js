"use strict";(self.webpackChunkdummy_code_documentation=self.webpackChunkdummy_code_documentation||[]).push([[2375],{3905:(e,a,n)=>{n.d(a,{Zo:()=>l,kt:()=>b});var r=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function c(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=r.createContext({}),d=function(e){var a=r.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},l=function(e){var a=d(e.components);return r.createElement(s.Provider,{value:a},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(n),m=t,b=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(b,i(i({ref:a},l),{},{components:n})):r.createElement(b,i({ref:a},l))}));function b(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in a)hasOwnProperty.call(a,s)&&(c[s]=a[s]);c.originalType=e,c[u]="string"==typeof e?e:t,i[1]=c;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9098:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var r=n(7462),t=(n(7294),n(3905));const o={sidebar_position:8},i="CoincidirTodo",c={unversionedId:"Cadenas/coincidirTodo",id:"Cadenas/coincidirTodo",title:"CoincidirTodo",description:"Imagina que tienes un texto largo con muchas palabras y quieres encontrar todas las palabras que cumplan con ciertas caracter\xedsticas, como todas las palabras de cuatro letras. En lugar de buscar manualmente una por una, puedes utilizar una herramienta que te ayude a encontrar todas las palabras que cumplan con ese criterio.",source:"@site/docs/Cadenas/coincidirTodo.md",sourceDirName:"Cadenas",slug:"/Cadenas/coincidirTodo",permalink:"/dummy-code-documentation/docs/Cadenas/coincidirTodo",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Cadenas/coincidirTodo.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Coincidir",permalink:"/dummy-code-documentation/docs/Cadenas/coincidir"},next:{title:"RellenarFin",permalink:"/dummy-code-documentation/docs/Cadenas/rellenarAlFinal"}},s={},d=[{value:"Ejemplo\ud83d\udcdd",id:"ejemplo",level:2},{value:"Sintaxis\ud83d\udd24",id:"sintaxis",level:2}],l={toc:d},u="wrapper";function p(e){let{components:a,...n}=e;return(0,t.kt)(u,(0,r.Z)({},l,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"coincidirtodo"},"CoincidirTodo"),(0,t.kt)("p",null,"Imagina que tienes un texto largo con muchas palabras y quieres encontrar todas las palabras que cumplan con ciertas caracter\xedsticas, como todas las palabras de cuatro letras. En lugar de buscar manualmente una por una, puedes utilizar una herramienta que te ayude a encontrar todas las palabras que cumplan con ese criterio."),(0,t.kt)("p",null,"Este funciona de manera similar. Puedes utilizarlo para buscar todas las coincidencias de un patr\xf3n espec\xedfico en una ",(0,t.kt)("inlineCode",{parentName:"p"},"cadena")," de texto y obtener un iterador que te permita acceder a todas las coincidencias encontradas."),(0,t.kt)("h2",{id:"ejemplo"},"Ejemplo\ud83d\udcdd"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="coincidirTodo.dummy"',title:'"coincidirTodo.dummy"'},'const frase = "Hola, mi nombre es Juan y tengo 30 a\xf1os.";\nconst coincidencias = frase.coincidirTodo(/\\b\\w{4}\\b/g);\npara (const coincidencia de coincidencias) {\n  imprimir(coincidencia[0]);\n}\n\n')),(0,t.kt)("p",null,"En este caso, ",(0,t.kt)("inlineCode",{parentName:"p"},"coincidirTodo(/\\b\\w{4}\\b/g)"),' busca todas las palabras de cuatro letras y retorna un iterador que te permite acceder a cada coincidencia encontrada. El bucle para-de nos permite recorrer todas las coincidencias y mostrarlas por consola. En este ejemplo, se mostrar\xe1n las palabras "Hola", "Juan" y "a\xf1os", ya que son las \xfanicas palabras de cuatro letras en la frase.'),(0,t.kt)("p",null,"Cada elemento del iterador es un objeto que contiene la coincidencia encontrada y otros detalles adicionales, como la posici\xf3n de la coincidencia en la cadena original."),(0,t.kt)("p",null,"El m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"coincidirTodo()")," es especialmente \xfatil cuando necesitas trabajar con m\xfaltiples coincidencias y acceder a cada una de ellas individualmente."),(0,t.kt)("h2",{id:"sintaxis"},"Sintaxis\ud83d\udd24"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"coincidirTodo(expresion regular)\n")))}p.isMDXComponent=!0}}]);